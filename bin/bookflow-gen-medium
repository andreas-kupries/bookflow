#!/usr/bin/env tclsh
# -*- tcl -*-
#########################
# Scan the current directory for jpeg files and use them to initialize
# a book flow project.

lappend auto_path [file dirname [file dirname [file normalize [info script]]]]/lib

# TODO: Restrict to images of a certain size and/or make (camera type).

package require Tcl 8.5
package require fileutil
package require fileutil::traverse
package require bookflow::project

package require crimp::tk  ;# photo -> crimp 
package require crimp::ppm ;# crimp -> writing ppm
package require img::jpeg  ;# img -> photo
package require crimp      ;# resizing
# XXX TODO: crimp::jpeg

# Disable anything from the GUI, there is nothing.
wm withdraw .

#########################

proc main {} {
    if {[catch {
	cmdline
	generate-medium
	complete-project
    } msg]} {
	puts stderr $msg
	exit 1
    }
    return
}

proc cmdline {} {
    global argv argv0
    if {[llength $argv] != 0} {
	puts stderr "Usage: $argv0"
	exit 1
    }

    # Open the project file.
    bookflow::project BOOK [pwd]/BOOKFLOW
    return
}

proc generate-medium {} {

    set images [BOOK images]
    if {![llength $images]} return

    set pdir [BOOK where]

    set k 0
    set n [llength $images]

    foreach image $images {
	incr k
	puts -nonewline stderr "\nMedium $image \[$k/$n\]"
	flush stderr

	# Load image, by way of Tk photo - crimp currently doesn't
	# have a jpeg reader, yet.

puts -nonewline stderr /load
flush stderr
	image create photo IMAGE -file $pdir/$image
	set i [crimp convert 2rgb [crimp read tk IMAGE]]
	image delete IMAGE

	# Blur it before sizing down, to make the resampler have
	# (indirectly) access to not only the 4 corners around the
	# pixel, but everything from the larger environment which
	# should go into the new pixel.

	# What sigma do we need ? (scale dependent)

	# Here scale down by 11.4, choose sigma 11.4/3 = 3.8
	# filter radius becomes roughly 3 sigma = 11.4.

puts -nonewline stderr /blur
flush stderr
	set res {}
	foreach c [crimp split $i] {
puts -nonewline stderr *
flush stderr
	    set c [crimp convert 2float $c]
	    set c [crimp gaussian_blur_float $c 3.8]
	    set c [crimp convert 2grey8 $c]
	    lappend res $c
	}
	set i [crimp join 2rgb {*}$res]
	unset res c

	# Now the actual down sizing.
puts -nonewline stderr /resize
flush stderr
	set i [crimp::resize $i 320 240]

	# And write it out. Change the extension, this not jpeg anymore.
	file mkdir medium
puts -nonewline stderr /write
flush stderr
	crimp write 2file ppm-raw medium/[file root $image].ppm $i

	puts -nonewline stderr " OK"
	flush stderr
    }

    puts stderr ""
    return
}

proc complete-project {} {
    BOOK destroy
    return
}

#########################

main
exit
