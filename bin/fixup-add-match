#!/usr/bin/env tclsh
# -*- tcl -*-
#########################

# Fix the schema of an existing bookflow database to contain the
# tables necessary for handling double-pages, i.e. left/right
# matchup.

lappend auto_path [file dirname [file dirname [file normalize [info script]]]]/lib

# TODO: Restrict to images of a certain size and/or make (camera type).

package require Tcl 8.5
package require fileutil
package require fileutil::traverse
package require jpeg
package require bookflow::project

#########################

proc main {} {
    if {[catch {
	cmdline
	fix
    } msg]} {
	puts stderr $msg
	exit 1
    }
    return
}

proc cmdline {} {
    global argv argv0
    if {[llength $argv] > 1} {
	puts stderr "Usage: $argv0 ?projectdir?"
	exit 1
    }
    if {[llength $argv] == 1} {
	cd [lindex $argv 0]
    }

    # Open the project file.
    sqlite3 BOOK [pwd]/BOOKFLOW
    return
}

proc fix {} {
    BOOK transaction {
	BOOK eval {
-- Information about all double-pages, i.e. spreads in the
-- project. I.e which left and right images belong together, how they
-- are ordered, where pieces are missing or blank.

CREATE TABLE spread (

    -- Basics: Id of the double page aka page spread, and the ordinal
    -- specifying the ordering of spreads. Separating these two allows
    -- changes to the ordering without regard to future references to
    -- the table.

    pid   INTEGER  NOT NULL  PRIMARY KEY  AUTOINCREMENT,
    ord   INTEGER  NOT NULL  UNIQUE

    -- The information about the spread, i.e. the left and right
    -- images, and the page number of the spread (which is always
    -- even, and thus is also always the page number of the left
    -- image). Both image references can be NULL, indicating a missing
    -- or blank page. The flags are used to distinguish the two cases.

    left  INTEGER  REFERENCES image,
    right INTEGER  REFERENCES image,
    page  TEXT     UNIQUE,

    lstatus INTEGER NOT NULL REFERENCES pagestatus,
    rstatus INTEGER NOT NULL REFERENCES pagestatus
);

-- Helper table for self-description. Names/labels for the image
-- orientations. Fixed content. Note: The order of orientation is
-- following the path of the sun in a day.

CREATE TABLE orientation (
    id   INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT    NOT NULL UNIQUE
);

INSERT INTO orientation VALUES (0,'east');
INSERT INTO orientation VALUES (1,'south');
INSERT INTO orientation VALUES (2,'west');
INSERT INTO orientation VALUES (3,'north');

-- Helper table for self-description. Names/labels for the page stati in a spread.
-- Fixed content.

CREATE TABLE pagestatus (
    id   INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT    NOT NULL UNIQUE
);

INSERT INTO pagestatus VALUES (0,'ok');
INSERT INTO pagestatus VALUES (1,'blank');
INSERT INTO pagestatus VALUES (2,'missing');
	}
    }

    rename BOOK {}
    return
}

#########################

main
exit
